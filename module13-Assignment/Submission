App.vue
<template>
    <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3">
                <h1>Filters & Mixins</h1>
                <!-- Exercise 1) -->
                <!-- Build a local Filter which reverses the Text it is applied on -->
                <p>{{ text | reverseText }}</p>

                <!-- Exercise 2 -->
                <!-- Build a global Filter which counts the length of a word and it appends it -->
                <!-- Like this: "Test" => Gets Filtered to => "Test (4)" -->
                <p>{{ text | getLengthOfString }}</p>
                <!-- Exercise 3 -->
                <!-- Do the same as in Exercises 1 & 2, now with Computed Properties -->
                <p>{{ reverseCmpText }}</p>
                <p>{{ getStringCmpLength }}</p>
                <!-- Exercise 4 -->
                <!-- Share the Computed Property rebuilding Exercise 2 via a Mixin -->
                <p>{{ getStringMixinLength }}</p>
            </div>
        </div>
    </div>
</template>

<script>
    import { TextMixin } from './TextMixin';
    export default {
        data() {
            return {
                text: 'Reverse Text'
            };
        },
        filters: {
            reverseText(value) {
                return value.split("").reverse().join("");
            }
        },
        computed: {
            reverseCmpText() {
                return this.text.split("").reverse().join("");
            },
            getStringCmpLength(){
                return this.text + ' (' + this.text.length + ')';
            }
        },
        mixins: {
            textMixin: [TextMixin]
        }
    }
</script>

<style>
</style>

Main.js
import Vue from 'vue'
import App from './App.vue'

Vue.filter('getLengthOfString', function(value) {
    return  value  + ' (' + value.length + ')';
});

Vue.mixin({
    created() {
        console.log('Global Mixin - Created Hook');
    }
});

new Vue({
  el: '#app',
  render: h => h(App)
})

TextMixin.js
export const TextMixin = {
    data() {
        return {
            initialText: 'Exercise 4'
        };
    },
    computed: {
        getStringMixinLength(){
            return this.initialText + ' (' + this.initialText.length + ')';
        }
    }
};
